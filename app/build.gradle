/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'

}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter 

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'io.javalin:javalin:5.6.1'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    implementation "io.javalin:javalin-rendering:5.6.0"
    implementation 'org.thymeleaf:thymeleaf:3.1.1.RELEASE'
    implementation 'com.h2database:h2:2.1.214'
    implementation 'org.postgresql:postgresql:42.3.8'
    implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final'
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'org.jasypt:jasypt:1.9.3'


    // This dependency is used by the application.
    implementation libs.guava
}

shadowJar{
    archiveBaseName.set("app")
    archiveClassifier.set('')
    archiveVersion.set('')
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'parcial.Main'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
